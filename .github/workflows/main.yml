name: Test ARM

on:
  push:
    branches:
      - main
  pull_request:
    branches:    
      - main

jobs:
  test-template:
    name: Test ARM (Neo4j Cluster)
    runs-on: ubuntu-latest
    env:
      ResourceGroupLocation: westeurope
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Configure Resource Group and Deployment variables
      id: variables
      run: |
        DATE=`echo $(date '+%Y%m%d-%S')`
        RGNAME=`echo ghactions-rg-$DATE`
        DEPNAME=`echo ghactions-dep-$DATE`
        echo "rgName=$RGNAME" >> $GITHUB_OUTPUT
        echo "depName=$DEPNAME" >> $GITHUB_OUTPUT
        echo "Resource Group name: $RGNAME"
        echo "Deployment name: $DEPNAME"

#    - name: Create Resource Group
#      uses: Azure/CLI@v1
#      id: rgCreate
#      with:
#        inlineScript: |
#          #!/bin/bash
#          az group create --name ${{ steps.variables.outputs.rgName }} --location ${{ env.ResourceGroupLocation }}
#          echo "Azure resource group created"
#
#    - name: Deploy ARM Template (Neo4j Cluster)
#      id: deployARM
#      uses: azure/arm-deploy@v1
#      with:
#        resourceGroupName: ${{ steps.variables.outputs.rgName }}
#        template: ./marketplace/mainTemplate.json
#        parameters: ./marketplace/parameters.json
#        deploymentName: ${{ steps.variables.outputs.depName }}

    - name: Execute tests
      run: |
#        URI=$(echo "${{ steps.deployARM.outputs.neo4jBrowserURL }}" | sed 's/http/neo4j/g;s/7474\//7687/g')
#        PASSWORD=$(cat ./marketplace/parameters.json | jq .adminPassword.value | sed 's/"//g')
#        echo "PAssword and uri are ${URI} , ${PASSWORD}"
        curl -o ./neo4jtester_linux "https://github.com/neo4j/neo4jtester/raw/main/build/neo4jtester_linux"
        chmod +x ./neo4jtester_linux
        ls -lat
        ./neo4jtester_linux "${URI}" "neo4j" "${PASSWORD}"

#    - name: Delete Resource Group
#      if: always()
#      uses: Azure/CLI@v1
#      with:
#        inlineScript: |
#          #!/bin/bash
#          az group delete --name ${{ steps.variables.outputs.rgName }} --yes
#          echo "Azure resource group deleted !!"
