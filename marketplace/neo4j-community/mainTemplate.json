{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "adminPassword": {
        "type": "securestring"
      },
      "vmSize": {
        "type": "string"
      },
      "graphDatabaseVersion": {
        "type": "string",
        "allowedValues": [
          "5",
          "4.4"
        ]
      },
      "diskSize": {
        "type": "int"
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]"
      },
      "utcValue": {
        "type": "string",
        "defaultValue": "[utcNow()]"
      },
      "_artifactsLocation": {
        "type": "string",
        "metadata": {
            "description": "The base URI where artifacts required by this template are located including a trailing '/'"
        },
          "defaultValue": "[deployment().properties.templateLink.uri]"
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
            "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
        },
        "defaultValue": ""
      }
    },
    "variables": {
      "uniqueString": "[uniquestring(resourceGroup().id, deployment().name)]",
      "networkSGName": "[concat('nsg-neo4j-',parameters('location'),'-',parameters('utcValue'))]",
      "vnetName": "[concat('vnet-neo4j-',parameters('location'),'-',parameters('utcValue'))]",
      "vmName": "[concat('vm-neo4j-',parameters('location'),'-',parameters('utcValue'))]",
      "userAssignedIdentityName": "[concat('usermanaged-neo4j-',parameters('location'),'-',parameters('utcValue'))]",
      "roleAssignmentName": "[guid(concat('roleassignment-neo4j-',parameters('location'),'-',parameters('utcValue')))]",
      "azLoginIdentity": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.ManagedIdentity/userAssignedIdentities/',variables('userAssignedIdentityName'))]",
      "scriptName": "[if(equals(parameters('graphDatabaseVersion'),'5'),'scripts/neo4j-community/node.sh','scripts/neo4j-community/node4.sh')]",
      "bashCommand": "[if(equals(parameters('graphDatabaseVersion'),'5'),'bash node.sh ','bash node4.sh ')]",
      "roleDefName": "[guid(concat('customRoleDef-',parameters('location'),'-',parameters('utcValue')))]",
      "roleName": "[concat('customRole-',resourceGroup().name,'-',parameters('location'),'-',parameters('utcValue'))]",
      "nicName": "[concat('nic-',resourceGroup().name,'-',parameters('location'),'-',parameters('utcValue'))]",
      "publicIpName": "[concat('ip-neo4j-',resourceGroup().name,'-',parameters('location'),'-',parameters('utcValue'))]",
      "adminUsername": "[string('neo4j')]",
      "doubleQuote": "\""
    },
    "resources": [
      {
        "name": "[variables('networkSGName')]",
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2022-07-01",
        "location": "[parameters('location')]",
        "properties": {
          "securityRules": [
            {
              "name": "SSH",
              "properties": {
                "description": "SSH",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "Internet",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound"
              }
            },
            {
              "name": "HTTPS",
              "properties": {
                "description": "HTTPS",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "7473",
                "sourceAddressPrefix": "Internet",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 101,
                "direction": "Inbound"
              }
            },
            {
              "name": "HTTP",
              "properties": {
                "description": "HTTP",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "7474",
                "sourceAddressPrefix": "Internet",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 102,
                "direction": "Inbound"
              }
            },
            {
              "name": "Bolt",
              "properties": {
                "description": "Bolt",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "7687",
                "sourceAddressPrefix": "Internet",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 103,
                "direction": "Inbound"
              }
            }
          ]
        }
      },
      {
        "name": "[variables('vnetName')]",
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2022-07-01",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSGName'))]"
        ],
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/8"
            ]
          },
          "subnets": [
            {
              "name": "subnet",
              "properties": {
                "addressPrefix": "10.0.0.0/16",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSGName'))]"
                }
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
        "name": "[variables('userAssignedIdentityName')]",
        "apiVersion": "2018-11-30",
        "location": "[parameters('location')]"
      },
      {
        "type": "Microsoft.Authorization/roleDefinitions",
        "apiVersion": "2018-07-01",
        "name": "[variables('roleDefName')]",
        "properties": {
          "roleName": "[variables('roleName')]",
          "description": "Allow access to create tags on vmss",
          "type": "customRole",
          "permissions": [
            {
              "actions": [
                "Microsoft.Compute/virtualMachines/read",
                "Microsoft.Compute/virtualMachines/*/read",
                "Microsoft.Resources/tags/write",
                "Microsoft.Resources/tags/read",
                "Microsoft.Resources/tags/delete"
              ]
            }
          ],
          "assignableScopes": [
            "[resourceGroup().id]"
          ]
        }
      },
      {
        "type": "Microsoft.Authorization/roleAssignments",
        "dependsOn" : [
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities',variables('userAssignedIdentityName'))]",
          "[resourceId('Microsoft.Authorization/roleDefinitions',variables('roleDefName'))]"
        ],
        "apiVersion": "2022-04-01",
        "name": "[variables('roleAssignmentName')]",
        "properties": {
          "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions',variables('roleDefName'))]",
          "principalType": "ServicePrincipal",
          "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName'))).principalId]"
        }
      },
      {
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[variables('publicIpName')]",
        "apiVersion": "2022-05-01",
        "location": "[parameters('location')]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[concat('node-', variables('uniqueString'))]"
          }
        }
      },
      {
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[variables('nicName')]",
        "apiVersion": "2022-07-01",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]",
          "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipConfig",
              "properties": {
                "primary": true,
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
                },
                "subnet": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'subnet')]"
                }
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[variables('vmName')]",
        "location": "[parameters('location')]",
        "apiVersion": "2022-11-01",
        "dependsOn": [
          "[resourceId('Microsoft.Authorization/roleAssignments',variables('roleAssignmentName'))]",
          "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
          "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
        ],
        "identity": {
          "type": "userAssigned",
          "userAssignedIdentities": {
            "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/',variables('userAssignedIdentityName'))]": {}
          }
        },
        "plan": {
          "publisher": "neo4j",
          "product": "neo4j-ee-vm",
          "name": "byol"
        },
        "properties": {
          "hardwareProfile": {
            "vmSize": "[parameters('vmSize')]"
          },
          "storageProfile": {
            "osDisk": {
              "createOption": "FromImage"
            },
            "imageReference": {
              "publisher": "Neo4j",
              "offer": "neo4j-ee-vm",
              "sku": "byol",
              "version": "latest"
            },
            "dataDisks": [
              {
                "lun": 0,
                "createOption": "Empty",
                "managedDisk": {
                  "storageAccountType": "Premium_LRS"
                },
                "caching": "None",
                "diskSizeGB": "[parameters('diskSize')]"
              }
            ]
          },
          "osProfile": {
            "computerName": "[concat('node-', variables('uniqueString'))]",
            "adminUsername": "[variables('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "[concat(variables('vmName'),'/installNeo4j')]",
        "apiVersion": "2022-11-01",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
        ],
        "properties": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "CustomScript",
          "typeHandlerVersion": "2.0",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": [
              "[uri(parameters('_artifactsLocation'), concat(variables('scriptName'), parameters('_artifactsLocationSasToken')))]"
            ]
          },
          "protectedSettings": {
              "commandToExecute": "[concat(variables('bashCommand'), variables('adminUsername'), ' ',variables('doubleQuote'),parameters('adminPassword'),variables('doubleQuote'), ' ', variables('uniqueString'), ' ', parameters('location'), ' ', parameters('graphDatabaseVersion'),' ',variables('azLoginIdentity'), ' ',resourceGroup().name, ' ',variables('vmName'))]"
            }
        }
      }

    ],
    "outputs": {
      "Neo4jBrowserURL": {
        "type": "string",
        "value": "[uri(concat('http://node-', variables('uniqueString'), '.', parameters('location'),'.cloudapp.azure.com:7474'),'')]"
      },
      "Username": {
        "type": "string",
        "value": "neo4j"
      }
    }
  }
